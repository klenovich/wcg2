{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect, useContext } from \"react\";\nimport getTodaySeed from \"./getTodaySeed\";\nimport { AppContext } from \"../App\";\nimport { countries } from \"../data/countries\";\nimport { IN_PROCESS } from \"../constants\";\n\nconst useToday = () => {\n  _s();\n\n  const [countrySvg, setCountrySvg] = useState();\n  const {\n    setTodayCountry,\n    numGuesses,\n    game\n  } = useContext(AppContext);\n  const random = getTodaySeed();\n  const index = Math.floor(random * countries.length);\n  const todayCountry = countries[index];\n  useEffect(() => {\n    const dynamicImport = async () => {\n      const shape = await import(`../data/countries-shape-svg/${todayCountry.value.toLowerCase()}/vector.svg`);\n      const flag = await import(`../data/countries-flag-svg/${todayCountry.value.toLowerCase()}.svg`);\n      const countrySvg = {\n        shape: shape.default,\n        flag: flag.default\n      };\n      setCountrySvg(countrySvg);\n      setTodayCountry(todayCountry);\n    };\n\n    if (numGuesses === 0 && game === IN_PROCESS) {\n      dynamicImport();\n    }\n\n    return () => {}; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [numGuesses, game]);\n  return countrySvg;\n};\n\n_s(useToday, \"cFG4NvF+apTI4iui8KvKTCJSULw=\");\n\nexport default useToday;","map":{"version":3,"names":["useState","useEffect","useContext","getTodaySeed","AppContext","countries","IN_PROCESS","useToday","countrySvg","setCountrySvg","setTodayCountry","numGuesses","game","random","index","Math","floor","length","todayCountry","dynamicImport","shape","value","toLowerCase","flag","default"],"sources":["/Users/lucasklenovich/Documents/GitHub/wcg2/tsu/src/utils/useToday.ts"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport getTodaySeed from \"./getTodaySeed\";\nimport { AppContext } from \"../App\";\nimport { countries } from \"../data/countries\";\nimport { IN_PROCESS } from \"../constants\";\n\nconst useToday = () => {\n  const [countrySvg, setCountrySvg] = useState<any>();\n  const { setTodayCountry, numGuesses, game } = useContext(AppContext);\n  const random = getTodaySeed();\n  const index = Math.floor(random * countries.length);\n  const todayCountry = countries[index];\n  useEffect(() => {\n    const dynamicImport = async () => {\n      const shape = await import(\n        `../data/countries-shape-svg/${todayCountry.value.toLowerCase()}/vector.svg`\n      );\n      const flag = await import(\n        `../data/countries-flag-svg/${todayCountry.value.toLowerCase()}.svg`\n      );\n      const countrySvg = { shape: shape.default, flag: flag.default };\n      setCountrySvg(countrySvg);\n      setTodayCountry(todayCountry);\n    };\n\n    if (numGuesses === 0 && game === IN_PROCESS) {\n      dynamicImport();\n    }\n\n    return () => {};\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [numGuesses, game]);\n\n  return countrySvg;\n};\n\nexport default useToday;\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACrB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;EACA,MAAM;IAAEU,eAAF;IAAmBC,UAAnB;IAA+BC;EAA/B,IAAwCV,UAAU,CAACE,UAAD,CAAxD;EACA,MAAMS,MAAM,GAAGV,YAAY,EAA3B;EACA,MAAMW,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAGR,SAAS,CAACY,MAA9B,CAAd;EACA,MAAMC,YAAY,GAAGb,SAAS,CAACS,KAAD,CAA9B;EACAb,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,YAAY;MAChC,MAAMC,KAAK,GAAG,MAAM,OACjB,+BAA8BF,YAAY,CAACG,KAAb,CAAmBC,WAAnB,EAAiC,aAD9C,CAApB;MAGA,MAAMC,IAAI,GAAG,MAAM,OAChB,8BAA6BL,YAAY,CAACG,KAAb,CAAmBC,WAAnB,EAAiC,MAD9C,CAAnB;MAGA,MAAMd,UAAU,GAAG;QAAEY,KAAK,EAAEA,KAAK,CAACI,OAAf;QAAwBD,IAAI,EAAEA,IAAI,CAACC;MAAnC,CAAnB;MACAf,aAAa,CAACD,UAAD,CAAb;MACAE,eAAe,CAACQ,YAAD,CAAf;IACD,CAVD;;IAYA,IAAIP,UAAU,KAAK,CAAf,IAAoBC,IAAI,KAAKN,UAAjC,EAA6C;MAC3Ca,aAAa;IACd;;IAED,OAAO,MAAM,CAAE,CAAf,CAjBc,CAkBd;EACD,CAnBQ,EAmBN,CAACR,UAAD,EAAaC,IAAb,CAnBM,CAAT;EAqBA,OAAOJ,UAAP;AACD,CA5BD;;GAAMD,Q;;AA8BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}