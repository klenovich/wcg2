{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport const useClickOutside = (ref, callback) => {\n  _s();\n\n  useEffect(() => {\n    const listener = event => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n\n      callback();\n    };\n\n    document.addEventListener(\"click\", listener);\n    return () => {\n      document.removeEventListener(\"click\", listener);\n    };\n  }, [ref, callback]);\n};\n\n_s(useClickOutside, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useClickOutside","ref","callback","listener","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/Users/lucasklenovich/Documents/GitHub/wcg2/tsu/src/utils/useClickOutside.ts"],"sourcesContent":["import { RefObject, useEffect } from \"react\";\n\nexport const useClickOutside = (\n  ref: RefObject<HTMLDivElement>,\n  callback: { (): void }\n) => {\n  useEffect(() => {\n    const listener = (event: { target: any }) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      callback();\n    };\n    document.addEventListener(\"click\", listener);\n    return () => {\n      document.removeEventListener(\"click\", listener);\n    };\n  }, [ref, callback]);\n};\n"],"mappings":";;AAAA,SAAoBA,SAApB,QAAqC,OAArC;AAEA,OAAO,MAAMC,eAAe,GAAG,CAC7BC,GAD6B,EAE7BC,QAF6B,KAG1B;EAAA;;EACHH,SAAS,CAAC,MAAM;IACd,MAAMI,QAAQ,GAAIC,KAAD,IAA4B;MAC3C;MACA,IAAI,CAACH,GAAG,CAACI,OAAL,IAAgBJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;QACtD;MACD;;MACDL,QAAQ;IACT,CAND;;IAOAM,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,QAAnC;IACA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,QAAtC;IACD,CAFD;EAGD,CAZQ,EAYN,CAACF,GAAD,EAAMC,QAAN,CAZM,CAAT;AAaD,CAjBM;;GAAMF,e"},"metadata":{},"sourceType":"module"}