{"ast":null,"code":"// src/queue.ts\nvar initQueue = () => {\n  if (window.va) return;\n\n  window.va = function a() {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    (window.vaq = window.vaq || []).push(params);\n  };\n}; // src/generic.ts\n\n\nvar isBrowser = typeof window !== \"undefined\";\n\nvar inject = function () {\n  let {\n    beforeSend\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _a;\n\n  if (!isBrowser) return;\n  initQueue();\n\n  if (beforeSend) {\n    (_a = window.va) == null ? void 0 : _a.call(window, \"beforeSend\", beforeSend);\n  }\n\n  if (document.head.querySelector('script[src=\"/va/script.js\"]')) return;\n  const script = document.createElement(\"script\");\n  script.src = \"/va/script.js\";\n  script.defer = true;\n  document.head.appendChild(script);\n};\n\nexport { inject };","map":{"version":3,"mappings":";AAAO,IAAMA,YAAY,MAAY;EAEnC,IAAIC,OAAOC,EAAX,EAAe;;EAEfD,OAAOC,EAAP,GAAY,SAASC,CAAT,GAA4B;IAAA,kCAAdC,MAAc;MAAdA,MAAc;IAAA;;IACtC,CAACH,OAAOI,GAAP,GAAaJ,OAAOI,GAAP,IAAc,EAA5B,EAAgCC,IAAhC,CAAqCF,MAArC;EACF,CAFA;AAGF,CAPO,C;;;ACGP,IAAMG,YAAY,OAAON,MAAP,KAAkB,WAApC;;AAEO,IAAMO,SAAS,YAEwB;EAAA,IAFvB;IACrBC;EADqB,CAEuB,uEAAb,EAAa;;EAP9C;;EAQE,IAAI,CAACF,SAAL,EAAgB;EAChBP;;EAEA,IAAIS,UAAJ,EAAgB;IACd,aAAOP,EAAP,qCAAY,YAAZ,EAA0BO,UAA1B;EACF;;EAEA,IAAIC,SAASC,IAAT,CAAcC,aAAd,CAA4B,6BAA5B,CAAJ,EAAgE;EAEhE,MAAMC,SAASH,SAASI,aAAT,CAAuB,QAAvB,CAAf;EACAD,OAAOE,GAAP,GAAa,eAAb;EACAF,OAAOG,KAAP,GAAe,IAAf;EAEAN,SAASC,IAAT,CAAcM,WAAd,CAA0BJ,MAA1B;AACF,CAjBO","names":["initQueue","window","va","a","params","vaq","push","isBrowser","inject","beforeSend","document","head","querySelector","script","createElement","src","defer","appendChild"],"sources":["/Users/lucasklenovich/Documents/GitHub/wcg2/tsu/node_modules/@vercel/analytics/src/queue.ts","/Users/lucasklenovich/Documents/GitHub/wcg2/tsu/node_modules/@vercel/analytics/src/generic.ts"],"sourcesContent":["export const initQueue = (): void => {\n  // initialise va until script is loaded\n  if (window.va) return;\n\n  window.va = function a(...params): void {\n    (window.vaq = window.vaq || []).push(params);\n  };\n};\n","import { initQueue } from './queue';\nimport type { BeforeSend } from './types';\n\nconst isBrowser = typeof window !== 'undefined';\n\nexport const inject = ({\n  beforeSend,\n}: { beforeSend?: BeforeSend } = {}): void => {\n  if (!isBrowser) return;\n  initQueue();\n\n  if (beforeSend) {\n    window.va?.('beforeSend', beforeSend);\n  }\n\n  if (document.head.querySelector('script[src=\"/va/script.js\"]')) return;\n\n  const script = document.createElement('script');\n  script.src = '/va/script.js';\n  script.defer = true;\n\n  document.head.appendChild(script);\n};\n"]},"metadata":{},"sourceType":"module"}