{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"./constants\");\n\nvar convertDistance = function convertDistance(meters) {\n  var targetUnit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"m\";\n  var factor = _constants.distanceConversion[targetUnit];\n\n  if (factor) {\n    return meters * factor;\n  }\n\n  throw new Error(\"Invalid unit used for distance conversion.\");\n};\n\nvar _default = convertDistance;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_constants","require","convertDistance","meters","targetUnit","arguments","length","undefined","factor","distanceConversion","Error","_default"],"sources":["/Users/lucasklenovich/Documents/GitHub/wcg2/node_modules/geolib/es/convertDistance.js"],"sourcesContent":["\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _constants=require(\"./constants\");var convertDistance=function convertDistance(meters){var targetUnit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"m\";var factor=_constants.distanceConversion[targetUnit];if(factor){return meters*factor}throw new Error(\"Invalid unit used for distance conversion.\")};var _default=convertDistance;exports.default=_default;"],"mappings":"AAAA;;AAAaA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA8B,YAA9B,EAA2C;EAACC,KAAK,EAAC;AAAP,CAA3C;AAAyDD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,UAAU,GAACC,OAAO,CAAC,aAAD,CAAtB;;AAAsC,IAAIC,eAAe,GAAC,SAASA,eAAT,CAAyBC,MAAzB,EAAgC;EAAC,IAAIC,UAAU,GAACC,SAAS,CAACC,MAAV,GAAiB,CAAjB,IAAoBD,SAAS,CAAC,CAAD,CAAT,KAAeE,SAAnC,GAA6CF,SAAS,CAAC,CAAD,CAAtD,GAA0D,GAAzE;EAA6E,IAAIG,MAAM,GAACR,UAAU,CAACS,kBAAX,CAA8BL,UAA9B,CAAX;;EAAqD,IAAGI,MAAH,EAAU;IAAC,OAAOL,MAAM,GAACK,MAAd;EAAqB;;EAAA,MAAM,IAAIE,KAAJ,CAAU,4CAAV,CAAN;AAA8D,CAArR;;AAAsR,IAAIC,QAAQ,GAACT,eAAb;AAA6BL,OAAO,CAACE,OAAR,GAAgBY,QAAhB"},"metadata":{},"sourceType":"script"}