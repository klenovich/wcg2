{"ast":null,"code":"import { FINISHED_WIN } from \"./../constants\";\nconst directionDictionary = {\n  N: \"↑\",\n  NNE: \"↗︎\",\n  NE: \"↗︎\",\n  ENE: \"↗︎\",\n  E: \"→\",\n  ESE: \"↘︎\",\n  SE: \"↘︎\",\n  SSE: \"↘︎\",\n  S: \"↓\",\n  SSW: \"↙︎\",\n  SW: \"↙︎\",\n  WSW: \"↙︎\",\n  W: \"←\",\n  WNW: \"↖︎\",\n  NW: \"↖︎\",\n  NNW: \"↖︎\"\n};\n\nconst getDayOfYear = () => {\n  const date = new Date();\n  const timestamp1 = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate());\n  const timestamp2 = Date.UTC(date.getFullYear(), 0, 0);\n  const differenceInMilliseconds = timestamp1 - timestamp2;\n  const differenceInDays = differenceInMilliseconds; // / 1000 / 60 / 60 / 24;\n\n  return differenceInDays;\n};\n\nconst createShareableResult = (selectedCountries, game, numGuesses) => {\n  var resultString = \"#Worldle Day#\" + getDayOfYear() + \" \" + (game === FINISHED_WIN ? numGuesses : \"X\") + \"/6\\n\";\n\n  for (var i = 0; i < numGuesses; i++) {\n    var {\n      direction,\n      distance\n    } = selectedCountries[i];\n    resultString += (i === numGuesses - 1 && game === FINISHED_WIN ? \"🎯\" : distance + \" KM = \" + Math.round(distance / 1.609) + \" MI, \" + directionDictionary[direction]) + \",\\n\";\n  }\n\n  resultString += \"https://worldle-guess.vercel.app\";\n  navigator.clipboard.writeText(resultString);\n  return resultString;\n};\n\nexport default createShareableResult;","map":{"version":3,"names":["FINISHED_WIN","directionDictionary","N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW","getDayOfYear","date","Date","timestamp1","UTC","getFullYear","getMonth","getDate","timestamp2","differenceInMilliseconds","differenceInDays","createShareableResult","selectedCountries","game","numGuesses","resultString","i","direction","distance","Math","round","navigator","clipboard","writeText"],"sources":["/Users/lucasklenovich/Documents/GitHub/wcg2/tsu/src/utils/createShareableResult.ts"],"sourcesContent":["import { FINISHED_WIN } from \"./../constants\";\nimport { CountryType } from \"../interfaces\";\n\nconst directionDictionary: { [key: string]: any } = {\n  N: \"↑\",\n  NNE: \"↗︎\",\n  NE: \"↗︎\",\n  ENE: \"↗︎\",\n  E: \"→\",\n  ESE: \"↘︎\",\n  SE: \"↘︎\",\n  SSE: \"↘︎\",\n  S: \"↓\",\n  SSW: \"↙︎\",\n  SW: \"↙︎\",\n  WSW: \"↙︎\",\n  W: \"←\",\n  WNW: \"↖︎\",\n  NW: \"↖︎\",\n  NNW: \"↖︎\",\n};\n\nconst getDayOfYear = () => {\n  const date = new Date();\n  const timestamp1 = Date.UTC(\n    date.getFullYear(),\n    date.getMonth(),\n    date.getDate()\n  );\n  const timestamp2 = Date.UTC(date.getFullYear(), 0, 0);\n  const differenceInMilliseconds = timestamp1 - timestamp2;\n  const differenceInDays = differenceInMilliseconds;// / 1000 / 60 / 60 / 24;\n  return differenceInDays;\n};\n\nconst createShareableResult = (\n  selectedCountries: CountryType[],\n  game: string,\n  numGuesses: number\n) => {\n  var resultString =\n    \"#Worldle Day#\" +\n    getDayOfYear() +\n    \" \" +\n    (game === FINISHED_WIN ? numGuesses : \"X\") +\n    \"/6\\n\";\n  for (var i = 0; i < numGuesses; i++) {\n    var { direction, distance } = selectedCountries[i];\n    resultString +=\n      (i === numGuesses - 1 && game === FINISHED_WIN\n        ? \"🎯\"\n        : distance +\n          \" KM = \" +\n          Math.round((distance as number) / 1.609) +\n          \" MI, \" +\n          directionDictionary[direction as string]) + \",\\n\";\n  }\n  resultString += \"https://worldle-guess.vercel.app\";\n  navigator.clipboard.writeText(resultString);\n  return resultString;\n};\nexport default createShareableResult;\n"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAGA,MAAMC,mBAA2C,GAAG;EAClDC,CAAC,EAAE,GAD+C;EAElDC,GAAG,EAAE,IAF6C;EAGlDC,EAAE,EAAE,IAH8C;EAIlDC,GAAG,EAAE,IAJ6C;EAKlDC,CAAC,EAAE,GAL+C;EAMlDC,GAAG,EAAE,IAN6C;EAOlDC,EAAE,EAAE,IAP8C;EAQlDC,GAAG,EAAE,IAR6C;EASlDC,CAAC,EAAE,GAT+C;EAUlDC,GAAG,EAAE,IAV6C;EAWlDC,EAAE,EAAE,IAX8C;EAYlDC,GAAG,EAAE,IAZ6C;EAalDC,CAAC,EAAE,GAb+C;EAclDC,GAAG,EAAE,IAd6C;EAelDC,EAAE,EAAE,IAf8C;EAgBlDC,GAAG,EAAE;AAhB6C,CAApD;;AAmBA,MAAMC,YAAY,GAAG,MAAM;EACzB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;EACA,MAAMC,UAAU,GAAGD,IAAI,CAACE,GAAL,CACjBH,IAAI,CAACI,WAAL,EADiB,EAEjBJ,IAAI,CAACK,QAAL,EAFiB,EAGjBL,IAAI,CAACM,OAAL,EAHiB,CAAnB;EAKA,MAAMC,UAAU,GAAGN,IAAI,CAACE,GAAL,CAASH,IAAI,CAACI,WAAL,EAAT,EAA6B,CAA7B,EAAgC,CAAhC,CAAnB;EACA,MAAMI,wBAAwB,GAAGN,UAAU,GAAGK,UAA9C;EACA,MAAME,gBAAgB,GAAGD,wBAAzB,CATyB,CASyB;;EAClD,OAAOC,gBAAP;AACD,CAXD;;AAaA,MAAMC,qBAAqB,GAAG,CAC5BC,iBAD4B,EAE5BC,IAF4B,EAG5BC,UAH4B,KAIzB;EACH,IAAIC,YAAY,GACd,kBACAf,YAAY,EADZ,GAEA,GAFA,IAGCa,IAAI,KAAK/B,YAAT,GAAwBgC,UAAxB,GAAqC,GAHtC,IAIA,MALF;;EAMA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;IACnC,IAAI;MAAEC,SAAF;MAAaC;IAAb,IAA0BN,iBAAiB,CAACI,CAAD,CAA/C;IACAD,YAAY,IACV,CAACC,CAAC,KAAKF,UAAU,GAAG,CAAnB,IAAwBD,IAAI,KAAK/B,YAAjC,GACG,IADH,GAEGoC,QAAQ,GACR,QADA,GAEAC,IAAI,CAACC,KAAL,CAAYF,QAAD,GAAuB,KAAlC,CAFA,GAGA,OAHA,GAIAnC,mBAAmB,CAACkC,SAAD,CANvB,IAMgD,KAPlD;EAQD;;EACDF,YAAY,IAAI,kCAAhB;EACAM,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BR,YAA9B;EACA,OAAOA,YAAP;AACD,CAzBD;;AA0BA,eAAeJ,qBAAf"},"metadata":{},"sourceType":"module"}